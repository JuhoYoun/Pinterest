Database detachment with MariaDB

지금은 db가 장고 컨테이너 안의 sqlite3 파일로 구동되지만 마리아 db 컨테이너를 따로 만들어 관리하도록하자 그리고 이 마리아 db 컨테이너에 볼륨을 설정해 컨테이너 유무에 상관 없이 데이터가 유지되도록 하자

그런데 이렇게 하면되면 VPS 서버(마리아db)와 내 로컬 서버(sqlite)의 환경이 다르게 된다 다시말해 local environment와 deploy environment가 달라진다 그래서 나중에 이 환경들에 대한 세팅을 분리시키는 작업이 필요하다

일단 mariadb 컨테이너를 만들자

dockerhub
-> https://hub.docker.com/_/mariadb

Starting a MariaDB instance with the latest version is simple:

$ docker run --detach --name some-mariadb --env MARIADB_USER=example-user --env MARIADB_PASSWORD=my_cool_secret --env MARIADB_ROOT_PASSWORD=my-secret-pw  mariadb:latest

이렇게 써 있다 여기 보면 env 즉 환경 변수를 설정해 줘야한다고 한다 MARIADB_USER, MARIADB_PASSWORD, MARIADB_ROOT_PASSWORD 이 변수들의 값을 설정해줘야한다

portainer로 가서 바로 컨테이너를 만들어주자 name은 mariadb라고 해주고 image에 mariadb:10.9 라고 해주자 버전을 명시하지 않으면 가장 최신것이 설치된다 그리고 Env로 가서 위의 세 변수들을 설정해주자
강의에서는 여기까지 하고 일단 컨테이너를 만들어 구동되는지 확인하였다

일단 local environmnet 설정과 deploy environment 설정을 분리 하는 작업을 한후 컨테이너를 연동하는 작업을 진행하자
소스에서 프로젝트 앱 내부의 settings.py 의 설정들을 나누어여한다 프로젝트앱 내부에 새로운 파이썬 패키지를 만들것이다 settings 라는 이름으로 만들자 그리고 settings.py를 settings 디렉토리 안에 넣고 base.py라고 바꾸자
그리고 settings 디렉토리 안에 local.py와 deploy.py를 만든다  base.py에서 개발환경이랑 배포환경이 같은 부분은 빼낼 필요 없다 하지만 다른 부분은 빼내서 local.py와 base.py로 나눠 넣어야한다

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

# Take environment variables from .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

base.py에서 위의 내용을 잘라서 local.py에 넣어준다 그리고 맨 위에 from .base import *  이렇게 해준다 이러면 local 환경은 됬다 local.py 내용을 deploy.py로 복붙한뒤 배포환경에 맞게 바꿔주자
https://docs.djangoproject.com/en/4.1/ref/settings/#databases 여기 가보면 이렇게 써 있다

When connecting to other database backends, such as MariaDB, MySQL, Oracle, or PostgreSQL, additional connection parameters will be required. See the ENGINE setting below on how to specify other database types. This example is for PostgreSQL:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'mydatabase',
        'USER': 'mydatabaseuser',
        'PASSWORD': 'mypassword',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

이를 참고해서 이렇게 만들자 

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django_homepage',
        'USER': 'jake',
        'PASSWORD': 'Teddy2020!!!!',
        'HOST': 'mariadb',
        'PORT': '3306',
    }
}

mariadb 자체가 mysql에서 파생되었다 때문에 여기서 mysql 엔진을 쓴다 나중에 네트워크를 통해서 장고랑 마리아디비 컨테이너를 연결해줄것이기 때문에 HOST에는 도메인이자 컨테이너 이름인 mariadb라고 쓴다

그리고 base.py에 이 부분을 고쳐주자
BASE_DIR = Path(__file__).resolve().parent.parent -> BASE_DIR = Path(__file__).resolve().parent.parent.parent

또 manage.py도 고쳐준다
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "pinterest.settings") -> os.environ.setdefault("DJANGO_SETTINGS_MODULE", "pinterest.settings.local")










