WYSIWYG : What You See Is What You Get 보는대로 글이 써진다

Chatgpt:
WYSIWYG는 What You See Is What You Get의 약자로서, 사용자가 문서를 편집할 때 사용자가 편집 중인 문서의 최종 모양과 레이아웃이 편집 화면에 정확히 표시되도록 하는 인터페이스를 의미합니다. WYSIWYG 편집기는 사용자가 문서를 작성하면서 해당 문서의 실제 모양을 볼 수 있도록 하며, 마크업 언어와 같은 복잡한 코드를 직접 작성하지 않아도 문서를 만들 수 있도록 도와줍니다. 대표적인 WYSIWYG 편집기로는 Microsoft Word, Adobe Dreamweaver, Google Docs 등이 있습니다.

이번에는 WYSIWYG 라는 것을 우리 사이트에 적용해볼것이다 가능하면 나의 의도대로 쓸 수 있는? 게시판 기능이란다 글을 크게도 굵게도 또는 밑줄도 긋는등의 기능을 추가한다
우리는 오픈소스를 쓸거다

Medium Editor : https://github.com/yabwe/medium-editor

게시글 쓸 때 적용 시킬것이므로 Articleapp 으로 가서 Form을 좀 손봐줘야 한다. 그전에 Articleapp의 create.html 먼저 손봐주자

{% extends 'base.html' %}
{% load django_bootstrap5 %}

{% block content %}
<!--Medium Editor -->
<script src="//cdn.jsdelivr.net/npm/medium-editor@latest/dist/js/medium-editor.min.js"></script>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/medium-editor@latest/dist/css/medium-editor.min.css" type="text/css" media="screen" charset="utf-8">

    <div style="text-align: center; max-width: 500px; margin: 4rem auto;">
        <div class="mb-4">
            <h4>Create Article</h4>
        </div>
        <form action="{% url 'articleapp:create' %}" method="post" enctype="multipart/form-data">
            {% csrf_token %}
            {% bootstrap_form form %}
            <input type="submit" class="btn btn-dark rounded-pill col-6 mt-3">
        </form>
    </div>

<!-- editible 클래스를 가진 요소들을 새로운 MediumEditor로 만들겠다고 선언한다 -->
<script>var editor = new MediumEditor('.editable');</script>

{% endblock %}

이렇게 바꿔준다.

class ArticleCreationForm(ModelForm):
    content = forms.CharField(widget=forms.Textarea(attrs={'class': 'editable text-left',  <!-- bootstrap5 에서는 text-start -->
                                                           'style': 'height: auto;'}))

    class Meta:
        model = Article
        fields = ['title', 'image', 'project', 'content']
        
Django의 forms는 사용자가 입력한 데이터를 쉽게 검증하고 처리할 수 있는 기능을 제공하는데, 이때 필드에 지정한 위젯(widget)은 해당 필드의 입력 양식을 HTML로 렌더링하는 역할을 합니다. Django에서 제공하는 위젯에는 TextInput, NumberInput, CheckboxInput 등이 있으며, 사용자 정의 위젯도 만들 수 있습니다.

Textarea 위젯은 사용자가 긴 텍스트를 입력할 수 있는 입력 필드를 렌더링합니다. 이 위젯은 주로 TextField와 같은 모델 필드에 사용되며, 사용자가 긴 내용을 입력할 때에는 단순한 텍스트 필드보다 더 편리합니다. Textarea 위젯은 cols와 rows를 사용하여 텍스트 상자의 크기를 제어할 수 있습니다. 위의 코드에서는 추가적으로 'editable text-left'과 'style: height: auto;'를 옵션으로 지정하여 사용자가 글을 작성할 때 편리하도록 렌더링합니다.

근데 여기까지 하고 Medium Editor를 통해 게시글을 작성하면 content 부분에 html 태그가 나온다. 이는 장고 템플릿에서 Medium Editor로 입력한 부분을 html로 해석하여 그 html 코드를 detail 페이지에 뿌려줬기 때문이다. 

{{ target_article.content | safe }}

이럻게 safe 필터를 쓰면 html 코드 말고 우리가 Medium Editor 에서 보았던 모양 그대로 출력된다

Chatgpt:
Django의 Template 언어에서 safe 필터는 문자열을 HTML이나 XML로 해석하지 않고, 해당 문자열 그대로 출력하도록 해주는 필터입니다.

보안 상의 이유로 Django는 기본적으로 사용자가 입력한 텍스트를 HTML이나 XML로 해석하지 않습니다. 즉, 사용자가 입력한 텍스트는 일반 텍스트로 출력되며, 브라우저에서 HTML이나 XML로 해석되지 않습니다. 이는 사용자로부터 입력받은 정보를 악의적인 스크립트 코드나 태그를 이용한 공격으로부터 보호하기 위한 조치입니다.

하지만 때로는, 사용자로부터 입력받은 정보가 HTML이나 XML 형태로 출력되어야 할 때가 있습니다. 이 때, safe 필터를 사용하면 해당 문자열을 HTML이나 XML로 해석하지 않고, 그대로 출력할 수 있습니다. 예를 들어, 다음과 같은 코드를 작성할 수 있습니다.

Copy code
{{ some_html|safe }}
위 코드에서 some_html은 HTML 형태의 문자열이며, safe 필터를 사용하면 해당 문자열이 HTML로 해석되어 출력됩니다.

단, safe 필터는 보안에 취약할 수 있으므로, 사용 시 주의가 필요합니다. 가능한 다른 필터를 사용하는 것이 좋습니다.

현재 게시글을 만들때나 업데이트할 때 프로젝트 항목을 선택하려고 하면 프로젝트 리스트들에 각 프로젝트 이름이 나오는게 아니라 Project 1, 2  ... 이런식으로 나온다.

class Project(models.Model):
    image = models.ImageField(upload_to='project/', null=False)
    title = models.CharField(max_length=20, null=False)
    description = models.CharField(max_length=200, null=True)

    create_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f'{self.title}'
        
이런식으로 프로젝트 모델에 __str__ 함수를 설정해주면 앞으로는 프로젝트 타이틀이 대신 나온다.

Material Icons : https://fonts.google.com/icons
github : https://github.com/google/material-design-icons
구글에서 무료로 제공하는 아이콘 패키지

<a class="material-icons"
   style="box-shadow: 0 0 4px #ccc; border-radius: 10rem; padding: .4rem;"
   href="{% url 'profileapp:update' pk=target_user.profile.pk %}">
    edit
</a>

이렇게 사용할 수 있다. 클래스 material-icons 를 주는곳이 edit 이라는 문자열을 품고 있어서 edit 과 일치하는 icons이 뜨게 된다. Edit이라고 하면 안뜬다.

box-shadow: 0 0 4px #ccc;   0 0 은 그림자의 위치 4px는 그림자의 크기 그 다음은 그림자 





